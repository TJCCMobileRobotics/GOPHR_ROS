<?xml version="1.0"?>
<launch>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find gophr_hardware)/urdf/gophr_robot.xacro'" />

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="False"/>
  </node>
    
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
		
  <!-- Start RPLIDAR sensor node which provides LaserScan data  -->
  <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
    <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate" type="int" value="115200"/>
    <param name="frame_id" type="string" value="laser"/>
    <param name="inverted" type="bool" value="false"/>
    <param name="angle_compensate" type="bool" value="true"/>
    <param name="time_increment" type="int" value="0"/>
  </node>
  
  <!-- Use Real Time -->
  <param name="/use_sim_time" value="false"/>
  
  <!-- Hector SLAM -->
  <include file="$(find gophr_hardware)/launch/hector_mapping_env.launch"/>
  
  <!-- Uses extened kalman filter to create odom transform by receiving data from odom topic -->
  <include file="$(find gophr_hardware)/nav/launch/robot_pose_ekf.launch"/>
  
  <!-- Run odom node -->
  <!--<node name="robot" pkg="gophr_hardware" type="odom_pub.py"/>-->
  
  <!-- run move_base -->
  <include file="$(find gophr_hardware)/nav/launch/move_base.launch"/>
  
  <!-- run rviz -->  
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find gophr_hardware)/rviz/config/lidar_hector.rviz"/>

    
</launch>
